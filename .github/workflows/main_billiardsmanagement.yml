name: Build and deploy ASP.Net Core app to Azure Web App - billiardsmanagement

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Set up .NET Core
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Build the solution
      - name: Build with dotnet
        run: dotnet build BilliardsProMax.sln --configuration Release

      # Publish the app
      - name: dotnet publish
        run: dotnet publish BilliardsProMax.sln -c Release -o ${{ runner.workspace }}/myapp

      # Upload the artifact for the deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ runner.workspace }}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      # Download the artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      # Log in to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EF2CA912E8C147E7BA18A54CEDAAD978 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5F57D8C04DB54251B7021D5C923B08E6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E4771309464248169798233F1A11FC62 }}

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'billiardsmanagement'
          slot-name: 'Production'
          package: .
